{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","console","log","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRA4BeA,MAvBf,YAAuD,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAC1C,OACI,yBAAKC,UAAU,SACX,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,cACX,wBAAIA,UAAU,eAAeJ,GAC7B,wBAAII,UAAU,cAAcL,GAC5B,wBAAIK,UAAU,gBAAgBD,EAAOI,KAAK,SAACC,EAAOC,GAAR,OAAkB,wBAAIC,IAAKD,EAAOL,UAAU,gBAAgBI,OACtG,uBAAGJ,UAAU,iBAAkBH,EAAoBA,EAAQU,MAAM,EAAE,KAAK,MAVtE,uPCkDHC,G,kNA/CbC,MAAQ,CACNC,WAAY,EACZC,OAAS,I,EAGXC,U,sBAAY,8BAAAC,EAAA,sEAC+BC,IAAMC,IAAI,4DADzC,gBACaJ,EADb,EACHK,KAAQA,KAAQL,OACvBM,QAAQC,IAAIP,GACZ,EAAKQ,SAAS,CAACR,SAAQD,WAAY,IAHzB,2C,kEAOVU,KAAKR,c,+BAEC,MACsBQ,KAAKX,MAA1BC,EADD,EACCA,UAAWC,EADZ,EACYA,OAClB,OACE,6BAASX,UAAU,aAAaU,EAC9B,yBAAKV,UAAU,UACb,0BAAMA,UAAU,eAAhB,eAGF,yBAAKA,UAAU,UACVW,EAAOR,KAAI,SAAAkB,GAAK,OACf,kBAAC,EAAD,CACEf,IAAKe,EAAMC,GACXA,GAAID,EAAMC,GACV3B,KAAM0B,EAAM1B,KACZC,MAAOyB,EAAMzB,MACbC,QAASwB,EAAMxB,QACfC,OAAQuB,EAAME,mBACdxB,OAAQsB,EAAMtB,kB,GAhCZyB,IAAMC,YCDxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.64e6eb06.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst noSummary = \"ㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤ\";\r\n\r\nfunction Movie({year, title, summary, poster, genres}){\r\n    return (\r\n        <div className=\"movie\">\r\n            <img src={poster} alt={title} title={title}/>\r\n            <div className=\"movie_data\">\r\n                <h3 className=\"movie_title\">{title}</h3>\r\n                <h5 className=\"movie_year\">{year}</h5>\r\n                <ul className=\"movie_genres\">{genres.map( (genre, index) => <li key={index} className=\"genres_genre\">{genre}</li>)}</ul>\r\n                <p className=\"movie_summary\">{!summary ? noSummary:summary.slice(0,200)+\"...\"}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;","import React from 'react';\r\nimport axios from \"axios\"\r\nimport Movie from \"./Movie\"\r\nimport \"./App.css\"\r\n\r\nclass App extends React.Component{     // class component로 변경한 이유는 state를 사용하기 위해서.\r\n  state = { // 바꿀 데이터를 넣는다.\r\n    isLoading : true,\r\n    movies : []\r\n  };\r\n\r\n  getMovies = async () => {               // async와 await는 자바스크립트의 비동기 처리 새로운 패턴. axoios.get()이 끝날 때까지 기다린다.  \r\n    const {data : {data : {movies}}} = await axios.get(\"https://yts.mx/api/v2/list_movies.json?sorting_by=rating\"); \r\n    console.log(movies);\r\n    this.setState({movies, isLoading : false }) // this.setState({movies:movies}) 단축해서 사용 \r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getMovies();\r\n  }\r\n  render(){ // class component는 render를 가지고 있지 않지만, React component는 render method를 가지고 있기 때문에 사용 가능하다. ->  html code를 보여주게 된다.\r\n    const {isLoading, movies} = this.state;\r\n    return (\r\n      <section className=\"container\">{isLoading? \r\n        <div className=\"loader\">\r\n          <span className=\"loader_text\">Loading...</span>\r\n        </div> \r\n        : \r\n        <div className=\"movies\">\r\n            {movies.map(movie => (\r\n              <Movie \r\n                key={movie.id}\r\n                id={movie.id}\r\n                year={movie.year} \r\n                title={movie.title} \r\n                summary={movie.summary} \r\n                poster={movie.medium_cover_image}\r\n                genres={movie.genres} \r\n              />\r\n            ))}\r\n        </div>\r\n      }\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n// Component Life Cycle\r\n// mounting 컴포넌트 생성 : construnctor() -> render() -> componentDidMount() \r\n// updating 컴포넌트 수정 : setState() 호출되면 -> render() -> componentDidUpdate()\r\n// unmounting 컴포넌트 제거 : componentWillUnmount()\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}